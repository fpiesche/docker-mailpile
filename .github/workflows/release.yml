name: Release

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  PLATFORMS: linux/arm/v7,linux/arm64/v8,linux/amd64
  PUSH_IMAGE: ${{ github.ref == 'refs/heads/main' }}
  BUILD_RELEASE: true

jobs:

  build-images:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Get latest Mailpile tag
        run: |
          cd mailpile
          git fetch --tags
          LATEST_TAG_REV=$(git rev-list --tags --max-count 1)
          MAILPILE_VERSION=$(git describe --tags ${LATEST_TAG_REV})
          echo "MAILPILE_VERSION=${MAILPILE_VERSION}" >> $GITHUB_ENV
          git checkout ${MAILPILE_VERSION}

      - name: Check whether latest release needs building
        if: ${{ env.PUSH_IMAGE == 'true' }}
        run: |
          # Check whether there already is a Docker image for the current tag
          SERVER_TAGS=$(curl -s https://registry.hub.docker.com/v1/repositories/${{ secrets.DOCKERHUB_USERNAME }}/mailpile/tags | jq -r ".[].name") || SERVER_TAGS="none"
          for tag in ${SERVER_TAGS[@]}; do
            if [[ "$tag" == "${MAILPILE_VERSION}" ]]; then
              echo "Release ${tag} has already been built."
              echo "BUILD_RELEASE=false" >> $GITHUB_ENV
              exit
            fi
          done

      - name: Docker Setup QEMU
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-qemu-action@v2

      - name: Docker Setup Buildx
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v3 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Mailpile Docker image
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v4
        with:
          build-args: MAILPILE_VERSION=release
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/mailpile:latest
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/mailpile:${{ env.MAILPILE_VERSION }}
            ghcr.io/${{ github.repository_owner }}/mailpile:latest
            ghcr.io/${{ github.repository_owner }}/mailpile:${{ env.MAILPILE_VERSION }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ env.PUSH_IMAGE }}
          target: mailpile
